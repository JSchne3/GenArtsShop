{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productAction.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","className","Control","name","onChange","target","value","placeholder","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","category","brand","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0b1e810b.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {}\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n  } from '../constants/productConstants'\r\n  \r\n  export const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_LIST_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_LIST_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          products: action.payload.products,\r\n          pages: action.payload.pages,\r\n          page: action.payload.page,\r\n        }\r\n      case PRODUCT_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAILS_REQUEST:\r\n        return { ...state, loading: true }\r\n      case PRODUCT_DETAILS_SUCCESS:\r\n        return { loading: false, product: action.payload }\r\n      case PRODUCT_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PRODUCT_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_UPDATE_RESET:\r\n        return { product: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REVIEW_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PRODUCT_CREATE_REVIEW_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_REVIEW_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_TOP_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_TOP_SUCCESS:\r\n        return { loading: false, products: action.payload }\r\n      case PRODUCT_TOP_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS,\r\n  } from '../constants/cartConstants'\r\n  \r\n  export const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case CART_ADD_ITEM:\r\n        const item = action.payload\r\n  \r\n        const existItem = state.cartItems.find((x) => x.product === item.product)\r\n  \r\n        if (existItem) {\r\n          return {\r\n            ...state,\r\n            cartItems: state.cartItems.map((x) =>\r\n              x.product === existItem.product ? item : x\r\n            ),\r\n          }\r\n        } else {\r\n          return {\r\n            ...state,\r\n            cartItems: [...state.cartItems, item],\r\n          }\r\n        }\r\n      case CART_REMOVE_ITEM:\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n        }\r\n      case CART_SAVE_SHIPPING_ADDRESS:\r\n        return {\r\n          ...state,\r\n          shippingAddress: action.payload,\r\n        }\r\n      case CART_SAVE_PAYMENT_METHOD:\r\n        return {\r\n          ...state,\r\n          paymentMethod: action.payload,\r\n        }\r\n      case CART_CLEAR_ITEMS:\r\n        return {\r\n          ...state,\r\n          cartItems: [],\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import {\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n  } from '../constants/userConstants'\r\n  \r\n  export const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_LOGIN_REQUEST:\r\n        return { loading: true }\r\n      case USER_LOGIN_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_LOGIN_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_REGISTER_REQUEST:\r\n        return { loading: true }\r\n      case USER_REGISTER_SUCCESS:\r\n        return { loading: false, userInfo: action.payload }\r\n      case USER_REGISTER_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LOGOUT:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_DETAILS_REQUEST:\r\n        return { ...state, loading: true }\r\n      case USER_DETAILS_SUCCESS:\r\n        return { loading: false, user: action.payload }\r\n      case USER_DETAILS_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_DETAILS_RESET:\r\n        return { user: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_PROFILE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_PROFILE_SUCCESS:\r\n        return { loading: false, success: true, userInfo: action.payload }\r\n      case USER_UPDATE_PROFILE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_PROFILE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n      case USER_LIST_REQUEST:\r\n        return { loading: true }\r\n      case USER_LIST_SUCCESS:\r\n        return { loading: false, users: action.payload }\r\n      case USER_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LIST_RESET:\r\n        return { users: [] }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_RESET:\r\n        return {\r\n          user: {},\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_CREATE_RESET,\r\n  } from '../constants/orderConstants'\r\n  \r\n  export const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ORDER_CREATE_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_CREATE_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          success: true,\r\n          order: action.payload,\r\n        }\r\n      case ORDER_CREATE_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      case ORDER_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n  ) => {\r\n    switch (action.type) {\r\n      case ORDER_DETAILS_REQUEST:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        }\r\n      case ORDER_DETAILS_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          order: action.payload,\r\n        }\r\n      case ORDER_DETAILS_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ORDER_PAY_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_PAY_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          success: true,\r\n        }\r\n      case ORDER_PAY_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      case ORDER_PAY_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ORDER_DELIVER_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_DELIVER_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          success: true,\r\n        }\r\n      case ORDER_DELIVER_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      case ORDER_DELIVER_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n      case ORDER_LIST_MY_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_LIST_MY_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          orders: action.payload,\r\n        }\r\n      case ORDER_LIST_MY_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      case ORDER_LIST_MY_RESET:\r\n        return { orders: [] }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n      case ORDER_LIST_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_LIST_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          orders: action.payload,\r\n        }\r\n      case ORDER_LIST_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} className='d-flex'>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='light' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>SweetCream Arts</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ms-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; SweetCreamArts\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#56cc9d',\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios'\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`)\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productAction'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-light'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption>\r\n              <h2 className='carouselText'>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To SweetCream Arts',\r\n  description: 'We sell homemade arts and crafts',\r\n  keywords: 'arts, crafts, homemade, handmade, artistic',\r\n}\r\n\r\nexport default Meta","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productAction'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productAction'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, match, successProductReview, product._id])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Category: {product.category}</ListGroup.Item>\r\n                <ListGroup.Item>Brand: {product.brand}</ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant='success'>\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler} className='formPadding'>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler} className='formPadding'>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler} className='formPadding'>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Enter password'\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='confirmPassword'>\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type='password'\r\n                placeholder='Confirm password'\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    })\r\n    localStorage.removeItem('cartItems')\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler} className='formPadding'>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler} className='formPadding'>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping')\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment')\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler} className='formPadding'>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productAction'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productAction'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler} className='formPadding'>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}